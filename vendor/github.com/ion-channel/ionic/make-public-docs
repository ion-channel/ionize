#! /bin/bash

echo "# Ion Channel Endpoints"

# build the string
oldIFS=$IFS
for f in $(ls */*.go | grep -v _test.go)
do
  if [ -f $f ] ; then
    s=$(cat $f | grep -B1 'Endpoint =')
    if [[ -n "$s" ]] ; then
      s=${s//$'\n'/|}         # convert all new lines to '|'
      s=$(sed 's/|  */|/g' <<< $s)  # remove spaces after each line delimeter
      IFS='|' read -r -a array <<< "$s"
      for element in "${array[@]}"; do
        # if line starts with // grab it for description
        if [[ $element == //* ]] ; then
          desc="${element}"
          desc=${desc/\/\/ /""}         # strips the // from the comment line
          desc=$(sed -e 's/^\s*//' <<< $desc) # removes leading white spaces
          desc=$(sed -e 's/\s*$//' <<< $desc) # removes trailing white spaces
          desc=$(sed -e 's/Endpoint//' <<< $desc) # removes "Endpoint" from the description
        fi

        # if line starts with any letter, it's the name and the endpoint
        if [[ $element =~ ^[a-zA-Z].* ]] ; then
          prevIFS=$IFS
          IFS='=' read -r -a arr2 <<< "$element"
          name=${arr2[0]}
          endpoint=${arr2[1]}

          name=$(sed -e 's/^\s*//' <<< $name) # removes leading white spaces
          name=$(sed -E 's/\s*$//' <<< $name) # removes trailing white spaces
          name=$(sed -e 's/Endpoint//' <<< $name) # removes "Endpoint" from the name

          endpoint=$(sed -e 's/^\s*//' <<< $endpoint) # removes leading white spaces
          endpoint=$(sed -e 's/\s*$//' <<< $endpoint) # removes trailing white spaces

          endpoint=${endpoint//$'\"'/""} # remove quotes from endpoint
          endpoint=${endpoint//$'`'/""} # remove back tick from endpoint

          # output to markdown
          if [ -n "$name" ]; then
            echo -e "## $name"
            echo ""
            echo -e "$desc"
            echo ""
            echo -e "\`\`\`"
            echo -e "$endpoint"
            echo "\`\`\`"
            echo ""
          fi

          IFS=$prevIFS
        fi
      done
    fi
  fi
done

echo Updated: $(date +"%F %T %Z")
IFS=$oldIFS
